import type { Child, Parent } from '../types.js';
import type { ElementNode } from './element.js';
interface Siblings {
    following: ElementNode[];
    preceding: ElementNode[];
}
/**
 * Base class for nodes that might have parents.
 */
export declare class ChildNode {
    /**
     * Node type.
     */
    nodeType: string;
    /**
     * Parent node.
     */
    parentNode: Parent | null;
    /**
     * Ancestor elements of this node.
     */
    ancestors(): ElementNode[];
    /**
     * Clone this node.
     */
    clone(): ChildNode;
    /**
     * Remove this node from its parent node.
     */
    detach(): void;
    /**
     * Root node.
     */
    root(): Parent | Child;
    /**
     * Sibling elements of this node.
     */
    siblings(): Siblings;
    /**
     * Render node to string.
     */
    toString(): string;
}
export {};
