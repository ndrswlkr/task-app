import type { FragmentNode } from './fragment.js';
import { ParentNode } from './parent.js';
/**
 * Element node class.
 */
export declare class ElementNode extends ParentNode {
    /**
     * Attributes.
     */
    attributes: Record<string, string>;
    /**
     * Node content.
     */
    content: FragmentNode | null;
    /**
     * Namespace URI.
     */
    namespaceUri: string;
    /**
     * Node type.
     */
    readonly nodeType = "#element";
    /**
     * Tag name.
     */
    tagName: string;
    constructor(tagName: string, namespaceUri: string, attrs: Record<string, string>);
    /**
     * Clone this node.
     */
    clone(): ElementNode;
    /**
     * Copy attributes to this element. Only attributes that are not yet present in this element are copied.
     */
    adoptAttributes(attrs: Array<{
        name: string;
        value: string;
    }>): void;
    /**
     * Render node to string.
     */
    toString(options?: {
        xml: boolean;
    }): string;
    _content(options: {
        xml: boolean;
    }): string;
}
